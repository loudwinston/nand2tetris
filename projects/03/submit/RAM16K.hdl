// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM16K.hdl

/**
 * Memory of 16K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM16K {
    IN in[16], load, address[14];
    OUT out[16];

    PARTS:
    Mux4Way16(a=ramBank0, b=ramBank1, c=ramBank2, d=ramBank3, sel=address[0..1], out=out);

	DMux4Way(in=load, sel=address[0..1], a=loadRamBank0, b=loadRamBank1, c=loadRamBank2, d=loadRamBank3);


    RAM4K(in=in, address=address[2..13], load=loadRamBank0, out=ramBank0);
    RAM4K(in=in, address=address[2..13], load=loadRamBank1, out=ramBank1);
    RAM4K(in=in, address=address[2..13], load=loadRamBank2, out=ramBank2);
    RAM4K(in=in, address=address[2..13], load=loadRamBank3, out=ramBank3);
}